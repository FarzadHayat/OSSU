use "extra.sml";

val test1_0 = alternate [] = 0;
val test1_1 = alternate [5] = 5;
val test1_2 = alternate [5,1] = 5 - 1;
val test1_3 = alternate [5,~1] = 5 - ~1;
val test1_4 = alternate [1,2,3] = 1 - 2 + 3;
val test1_5 = alternate [1,2,3,4] = 1 - 2 + 3 - 4;
val test1_6 = alternate [~2,0,10,~5,3] = ~2 - 0 + 10 - ~5 + 3;

val test2_0 = min_max [1] = (1,1);
val test2_1 = min_max [1,2,3,4,5] = (1,5);
val test2_2 = min_max [5,4,3,2,1] = (1,5);
val test2_3 = min_max [~5,5,~10,0,3,~3] = (~10,5);
val test2_4 = min_max [~3,3,5,~5,10,~0] = (~5,10);

val test3_0 = cumsum [] = [];
val test3_1 = cumsum [1] = [1];
val test3_2 = cumsum [1,2,3] = [1,3,6];
val test3_3 = cumsum [1,4,20] = [1,5,25];
val test3_4 = cumsum [~3,0,3] = [~3,~3,0];
val test3_5 = cumsum [0,~5,10,2,~3] = [0,~5,5,7,4];

val test4_0 = greeting NONE = "Hello there, you!";
val test4_1 = greeting (SOME "Joe") = "Hello there, Joe!";

val test5_0 = repeat ([],[]) = [];
val test5_1 = repeat ([1],[]) = [];
val test5_2 = repeat ([],[1]) = [];
val test5_3 = repeat ([1,2,3],[1,2,3]) = [1,2,2,3,3,3];
val test5_4 = repeat ([1,2,3],[4,0,3]) = [1,1,1,1,3,3,3];
val test5_5 = repeat ([~1,2,0,4],[4,0,3]) = [~1,~1,~1,~1,0,0,0];
val test5_6 = repeat ([~1,2,0],[4,0,3,1]) = [~1,~1,~1,~1,0,0,0];

val test6_0 = addOpt (NONE,NONE) = NONE;
val test6_1 = addOpt (SOME 5,NONE) = NONE;
val test6_2 = addOpt (NONE,SOME 5) = NONE;
val test6_3 = addOpt (SOME 3,SOME 5) = SOME 8;
val test6_4 = addOpt (SOME ~4,SOME 0) = SOME ~4;

val test7_0 = addAllOpt ([]) = NONE;
val test7_1 = addAllOpt ([NONE]) = NONE;
val test7_2 = addAllOpt ([NONE,NONE]) = NONE;
val test7_3 = addAllOpt ([SOME 0]) = SOME 0;
val test7_4 = addAllOpt ([SOME 0, NONE, SOME 0]) = SOME 0;
val test7_5 = addAllOpt ([SOME 5, SOME ~1, NONE, SOME 0]) = SOME 4;
val test7_6 = addAllOpt ([NONE, SOME 10, SOME ~5, NONE, SOME 2]) = SOME 7;
