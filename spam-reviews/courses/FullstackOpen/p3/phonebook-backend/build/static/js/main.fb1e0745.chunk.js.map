{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","search","onSearch","value","onChange","PersonForm","name","number","nameChange","numberChange","personChange","onClick","Persons","persons","handleDelete","filter","person","toLowerCase","includes","map","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","notification","className","type","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setnewSearch","setNotification","useEffect","personService","initialPersons","notifyWith","setTimeout","event","target","preventDefault","personObject","existingPerson","find","p","window","confirm","returnedPerson","catch","error","console","log","concat","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb1e0745.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({search, onSearch}) => {\n  return (\n    <form>\n      <div>\n        filter shown with\n        <input value={search} onChange={onSearch}></input>\n      </div>\n    </form>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({name, number, nameChange, numberChange, personChange}) => {\n  return (\n    <form>\n      <div>name: <input value={name} onChange={nameChange}/></div>\n      <div>number: <input value={number} onChange={numberChange}/></div>\n      <div><button onClick={personChange}>add</button></div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({persons, search, handleDelete}) => {\n\n  return (\n    <div>\n      {persons\n          .filter(person =>\n            person.name.toLowerCase().includes(search.toLowerCase()))\n          .map(person =>\n          <div key={person.name}>\n            {person.name}  {person.number}\n            <button onClick={() => handleDelete(person.id)}>delete</button>\n          </div>\n          )\n        }\n    </div>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  /** State hooks */\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setnewSearch ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  /** Effect hooks */\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n    }, [])  // only on first render!\n\n  /** Event handlers */\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setnewSearch(event.target.value)\n  }\n\n  const handlePersonsChange = (event) => {\n    event.preventDefault()             // normally submit button refreshes page!\n\n    const personObject = {                                  // create new person\n      name: newName,\n      number: newNumber\n    }\n\n    // if we are adding a user that is already in the phonebook, update user\n    const existingPerson = persons.find(p => p.name === newName)\n    if (existingPerson) {\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n      if (result) {                                 // if user clicked \"confirm\"\n        personService\n          .update(existingPerson.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(p =>                         // update states\n              p.id === returnedPerson.id ? returnedPerson : p))\n            setNewName('')\n            setNewNumber('')\n            notifyWith(`Updated ${returnedPerson.name}`)\n          })\n          .catch(error => {\n            console.log(error.response.data.error)\n            notifyWith(`Information of '${newName}' was already removed from server`, 'error')\n          })\n      }\n    }\n    else {                                          // add new user to phonebook\n      personService                                 // add new person to backend\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))            // update states\n          setNewName('')\n          setNewNumber('')\n          notifyWith(`Added ${returnedPerson.name}`)\n        })\n        .catch(error => {             // catch validation error, display message\n          console.log(error.response.data.error)\n          notifyWith(`${error.response.data.error}`, 'error')\n        })\n    }\n  }\n\n  const handleDelete = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}?`)\n    if (ok) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        })\n        .catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} has already been removed`, 'error')\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification}/>\n\n      <Filter search={newSearch} onSearch={handleSearchChange}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        name={newName} number={newNumber} nameChange={handleNameChange}\n        numberChange={handleNumberChange} personChange={handlePersonsChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={persons} search={newSearch} handleDelete={handleDelete}/>\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}